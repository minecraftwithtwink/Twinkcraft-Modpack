{
	"credit": "Made with Blockbench",
	"textureSize": [64, 178],
	"models": [
		{
			"part": "head",
			"id": "head",
			"invertAxis": "xy",
			"translate": [0, -24, 0],
			"submodels": [
				{
					"id": "Created_by_FreshLX_for_Fresh_Animations",
					"invertAxis": "xy",
					"translate": [0, 0, 0]
				}
			],
			"animations": [
				{
					"var.testing": "0",
					"var.count_swim": "clamp(if(!is_riding&&!is_on_ground&&is_in_water, min(40, var.count_swim  +0.1 *frame_time*40), max(0, var.count_swim  -0.1 *frame_time*40)), 0, 1)",
					"var.r": "(pi*random(id)*4) +(limb_swing/20)*0",
					"var.b": "age /(11 -random(id)*2)",
					"var.ls": "limb_swing/if( limb_speed>0.85, 1, 1.2 )",
					"var.swim": "limb_swing/2 +age/3",
					"var.walk": "clamp(limb_speed*6, 0, 1)*clamp(9-limb_speed*10, 0, 1)",
					"var.ylook": "clamp(sin(var.r+age/60)*6, 0, 1)*1.2",
					"var.nov1": "if(right_arm.visible, 0, clamp(-5.6 +cos(-pi/6 +var.r +age/80)*6, 0, 1))*clamp(2-limb_speed*4, 0, 1)",
					"var.nov2": "clamp(-19 +cos(-pi/4 +var.r +var.b/10)*20, 0, 1)*clamp(1-limb_speed*2, 0, 1)",
					"var.spell": "clamp(if(right_arm.visible, min(20, var.spell +0.1 *frame_time*20), max(0, var.spell -0.1 *frame_time*20)), 0, 1)",
					"var.cast": "var.r+age/(1.4 +0.4*random(id))"
				},
				{
					"head.rx": "torad(head_pitch)/1.5 +sin(var.ls*2)/20*limb_speed +if(!is_riding&&!is_on_ground&&is_in_water, cos(var.swim*2)/30 +torad(-10) +torad(10*clamp(limb_speed*8, 0, 1)), (-torad(5 +15*random(id))*clamp(sin(limb_speed*3), 0, 1) )) +( cos(-pi/3 +var.r+var.b +sin(var.r+var.b))/4 -torad(10) )*var.nov2 +(sin(limb_swing/2)/4 +torad(20))*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0) +(-torad(15)*cos(var.spell*pi*1.5) -torad(10) )*clamp(var.spell*3, 0, 1)",
					"head.ry": "torad(head_yaw)/if(var.spell>0, 1.2, 1.8 -0.5*var.ylook) +sin(var.r+age/10 +sin(var.r*2+age/5)/2)/6 *var.nov1 +(-cos(var.cast)/8 )*clamp(-3+var.spell*4, 0, 1)",
					"head.rz": "                                                            sin(var.r+age/10 +sin(var.r*2+age/5)/2)/20*var.nov1 +cos(limb_swing/3)/3*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"head.tx": "sin(torad(45)+var.ls)/3*limb_speed +(-cos(pi/4 +var.cast) )*clamp(-3+var.spell*4, 0, 1)",
					"head.ty": "if(!is_riding&&!is_on_ground&&is_in_water, -sin(var.swim*2)/2          , 0.3) +14*var.count_swim +limb_speed*var.walk -sin(torad(if(limb_speed>0.5, -45, 45))+var.ls*2)/(1+(2*var.walk))*limb_speed +sin(var.r +var.b)/6 +( cos(var.r+var.b +sin(var.r+var.b)*1.5)/2 +0.5 )*var.nov2",
					"head.tz": "if(!is_riding&&!is_on_ground&&is_in_water, -1*clamp(limb_speed*8, 0, 1), (-1.5*limb_speed) -sin(var.r +var.b)/6 -cos(var.ls*2)/2*clamp(limb_speed*3, 0, 1) +0.5*random(id) +clamp(-1+limb_speed*2, 0, 1) +clamp(torad(-head_pitch)*3, -2, 0) ) +(sin(limb_swing/2) +2)*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0) +(2.5*-sin(var.spell*pi*1.5) -1.5 )*clamp(var.spell*3, 0, 1)",
					"nose.ty": "head.ty*var.testing",
					"body.rx": "         if(!is_riding&&!is_on_ground&&is_in_water, torad(20          *clamp(limb_speed*8, 0, 1)), sin(var.r +var.b)/60 +cos(var.ls*2)/18*limb_speed +torad(-5)*clamp(1-limb_speed*2, 0, 1)*random(id) +clamp(torad(head_pitch)/4, 0, pi/20) ) +( cos(var.r+var.b +sin(var.r+var.b))/12 )*var.nov2 -(sin(limb_swing/2)/2 +torad(20))/3*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0) +(-torad(10)*-sin(var.spell*pi*1.5) +torad(5) )*clamp(var.spell*3, 0, 1)",
					"body.ry": "         if(!is_riding&&!is_on_ground&&is_in_water, sin(var.swim  )/8                            , -sin(var.ls)/4*limb_speed*clamp(-4+limb_speed*5, 0, 1) +torad(head_yaw)/6/2*clamp(1-limb_speed*2, 0, 1) )                     +(-cos(var.cast)/5                               )*clamp(-3+var.spell*4, 0, 1)",
					"body.rz": "head.rz +if(!is_riding&&!is_on_ground&&is_in_water, sin(var.swim  )/30*clamp(limb_speed*8, 0, 1) , 0) -sin(var.r+age/10 +sin(var.r*2+age/5)/2)/20*var.nov1 -cos(limb_swing/3)/3*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0) +( cos(var.cast)/60 -cos(pi/4 +var.cast)/13 )*clamp(-3+var.spell*4, 0, 1)",
					"body.tx": "head.tx",
					"body.ty": "head.ty +(0.15*limb_speed) -cos(torad(if(limb_speed>0.5, -45, 45))+var.ls*2 +cos(var.ls*2)/2)/1.5/2*limb_speed",
					"body.tz": "head.tz +(0.25*limb_speed)",
					"nose.rx": "head.rx*var.testing",
					"nose.ry": "head.ry*var.testing",
					"nose.rz": "head.rz*var.testing",
					"nose.tx": "head.tx*var.testing",
					"nose.tz": "head.tz*var.testing"
				},
				{
					"arms.visible": "is_alive||!is_alive",
					"right_arm.visible": "is_alive||!is_alive",
					"left_arm.visible": "is_alive||!is_alive",
					"arms.rx": "body.rx",
					"arms.ry": "body.ry",
					"arms.rz": "body.rz",
					"arms.tx": "body.tx",
					"arms.ty": "body.ty",
					"arms.tz": "body.tz",
					"arms_rotation.sx": "1-clamp(-3.5+var.spell*6, 0, 1)",
					"arms_rotation.sy": "arms_rotation.sx",
					"arms_rotation.sz": "arms_rotation.sx",
					"arms_rotation.tx": "body.tx*0",
					"arms_rotation.ty": "body.ty*0 +1 -22.75 +sin(var.r +var.b-torad(60))/7 +( cos(-pi/3 +var.r+var.b +sin(var.r+var.b)*1.5) -0.8 )*var.nov2",
					"arms_rotation.tz": "body.tz*0 -0.5",
					"arms_rotation.rx": "if(!is_riding&&!is_on_ground&&is_in_water, sin(pi/4+var.swim*2                       )/16 -torad(20) -body.rx, 0) +torad(-50) +torad(-20)*-sin(var.spell*pi*1.5) +torad(15)*random(id) +( sin(torad(-45)+var.ls*2 -sin(var.ls*2)/3)/(6+(3*var.walk)) -torad(20))*clamp(limb_speed, 0, 1) +( sin(-pi/3 +var.r+var.b +sin(var.r+var.b) )/6 )*var.nov2 +(sin(limb_swing/2) -pi/4)/2*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"arms_rotation.ry": "if(!is_riding&&!is_on_ground&&is_in_water, sin(pi/4+var.swim  +sin(pi/4+var.swim*2)/3)/6                     , 0) +torad(head_yaw)/6*clamp(1-limb_speed*2, 0, 1) -sin(torad(45)+var.ls)/3*limb_speed*clamp(-4+limb_speed*5, 0, 1)",
					"arms_rotation.rz": "0"
				},
				{
					"right_arm.sx": "clamp(-3+var.spell*6, 0, 1)",
					"left_arm.sx": " clamp(-3+var.spell*6, 0, 1)",
					"right_arm.sy": "right_arm.sx",
					"left_arm.sy": "  left_arm.sx",
					"right_arm.sz": "right_arm.sx",
					"left_arm.sz": "  left_arm.sx",
					"right_arm.rx": "if(!is_riding&&!is_on_ground&&is_in_water, 0, if(is_riding, torad(-45), -sin(var.ls)*limb_speed/4 ) +torad(head_yaw)/8  )   -torad(50 +130*-sin(var.spell*pi*1.5)*var.spell) +sin(var.cast )/2*clamp(-2+var.spell*3, 0, 1)  +( -sin(-pi/3 +var.r+var.b +sin(var.r+var.b) )/6 )*var.nov2 +(sin(limb_swing/2) -pi/4)/2*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)*if(var.spell>0.5, -0.7, 1)",
					"left_arm.rx": " if(!is_riding&&!is_on_ground&&is_in_water, 0, if(is_riding, torad(-45),  sin(var.ls)*limb_speed/4 ) -torad(head_yaw)/8  )   -torad(50 +130*-sin(var.spell*pi*1.5)*var.spell) -sin(var.cast )/2*clamp(-2+var.spell*3, 0, 1)  +( -sin(-pi/3 +var.r+var.b +sin(var.r+var.b) )/6 )*var.nov2 +(sin(limb_swing/2) -pi/4)/2*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)*if(var.spell>0.5, -0.7, 1)",
					"right_arm.ry": "if(!is_riding&&!is_on_ground&&is_in_water, 0, (-sin(var.ls -sin(var.ls)/2)/1.5*limb_speed)/2 +if(is_riding, -torad(20), 0) -torad(15)*clamp(limb_speed*4, 0, 1) +cos(var.r +var.b)/30 ) +torad(10) +sin(pi/4 +var.cast)/3*clamp(-2+var.spell*3, 0, 1)",
					"left_arm.ry": " if(!is_riding&&!is_on_ground&&is_in_water, 0, (-sin(var.ls +sin(var.ls)/2)/1.5*limb_speed)/2 +if(is_riding,  torad(20), 0) +torad(15)*clamp(limb_speed*4, 0, 1) -cos(var.r +var.b)/30 ) -torad(10) +sin(pi/4 +var.cast)/3*clamp(-2+var.spell*3, 0, 1)",
					"right_arm.rz": "-torad(head_pitch)/14 +torad(-37) +(-cos(var.cast)/2 )*clamp(-2+var.spell*3, 0, 1)",
					"left_arm.rz": "  torad(head_pitch)/14 +torad( 37) +(-cos(var.cast)/2 )*clamp(-2+var.spell*3, 0, 1)",
					"right_arm.tx": "body.tx -5.2 +if(!is_riding&&!is_on_ground&&is_in_water, 0, (-sin(var.ls)/2*limb_speed )*torad(head_yaw)*clamp(1-limb_speed*2, 0, 1) -0.3 )",
					"left_arm.tx": " body.tx +5.2 +if(!is_riding&&!is_on_ground&&is_in_water, 0, ( sin(var.ls)/2*limb_speed )*torad(head_yaw)*clamp(1-limb_speed*2, 0, 1) +0.3 )",
					"right_arm.ty": "body.ty +3   +if(!is_riding&&!is_on_ground&&is_in_water, 0,                                                       sin(var.r +var.b-torad(60))/7                                              +if(is_riding,  1, 0) ) +( cos(-pi/3 +var.r+var.b +sin(var.r+var.b)*1.5) )*var.nov2 -3*-sin(var.spell*pi*1.5)*var.spell",
					"left_arm.ty": " body.ty +3   +if(!is_riding&&!is_on_ground&&is_in_water, 0,                                                       sin(var.r +var.b-torad(60))/7                                              +if(is_riding,  1, 0) ) +( cos(-pi/3 +var.r+var.b +sin(var.r+var.b)*1.5) )*var.nov2 -3*-sin(var.spell*pi*1.5)*var.spell",
					"right_arm.tz": "        -2   +if(!is_riding&&!is_on_ground&&is_in_water, 0, (-2*limb_speed)/3 -sin(torad(-30)+var.ls)*limb_speed -sin(var.r +var.b          )/6 +torad(head_yaw)*clamp(1-limb_speed*2, 0, 1) +if(is_riding, -2, 0) ) +(sin(limb_swing/2) +2)*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0) -cos(var.cast)*clamp(-2+var.spell*3, 0, 1) +3.25*-sin(var.spell*pi*1.5)*var.spell",
					"left_arm.tz": "         -2   +if(!is_riding&&!is_on_ground&&is_in_water, 0, (-2*limb_speed)/3 +sin(torad(-30)+var.ls)*limb_speed -sin(var.r +var.b          )/6 -torad(head_yaw)*clamp(1-limb_speed*2, 0, 1) +if(is_riding, -2, 0) ) +(sin(limb_swing/2) +2)*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0) +cos(var.cast)*clamp(-2+var.spell*3, 0, 1) +3.25*-sin(var.spell*pi*1.5)*var.spell"
				},
				{
					"right_leg.rx": "if(is_riding, 0, !is_riding&&!is_on_ground&&is_in_water, 0, (torad(1)+sin(var.r +var.b)/60) +asin( sin(var.ls))/2.5*var.walk +sin(var.ls)/(1.2-(0.15*var.walk))*clamp(-4+limb_speed*5, 0, 1) +clamp(-cos(var.ls)/5*clamp(limb_speed*1.5, 0, 1), 0, torad(45))/(1+(9*var.walk)) +torad(15)/(2+(3*var.walk))*clamp(-0.5+limb_speed*2, 0, 1) -torad(head_yaw)/30*clamp(1-limb_speed*2, 0, 1) ) +torad(2)*random(id) +( -cos(var.r+var.b +sin(var.r+var.b))/18 )*var.nov2",
					"left_leg.rx": " if(is_riding, 0, !is_riding&&!is_on_ground&&is_in_water, 0, (torad(1)+sin(var.r +var.b)/60) +asin(-sin(var.ls))/2.5*var.walk -sin(var.ls)/(1.2-(0.15*var.walk))*clamp(-4+limb_speed*5, 0, 1) +clamp( cos(var.ls)/5*clamp(limb_speed*1.5, 0, 1), 0, torad(45))/(1+(9*var.walk)) +torad(15)/(2+(3*var.walk))*clamp(-0.5+limb_speed*2, 0, 1) +torad(head_yaw)/30*clamp(1-limb_speed*2, 0, 1) ) +torad(2)*random(id) +( -cos(var.r+var.b +sin(var.r+var.b))/18 )*var.nov2",
					"right_leg.ry": "if(is_riding, 0, !is_riding&&!is_on_ground&&is_in_water, 0,  torad(head_yaw)/6 /2*clamp(1-limb_speed*2, 0, 1) +torad( 5-3*random(id))*clamp(1-limb_speed*4, 0, 1) )",
					"left_leg.ry": " if(is_riding, 0, !is_riding&&!is_on_ground&&is_in_water, 0,  torad(head_yaw)/6 /2*clamp(1-limb_speed*2, 0, 1) +torad(-5+3*random(id))*clamp(1-limb_speed*4, 0, 1) )",
					"right_leg.rz": "if(is_riding, 0, !is_riding&&!is_on_ground&&is_in_water, 0, -torad(head_yaw)/45/2.5*clamp(1-limb_speed*2, 0, 1) +head.tx/10*0 +cos(pi/8 +var.cast)/50*clamp(-3+var.spell*4, 0, 1) )",
					"left_leg.rz": " if(is_riding, 0, !is_riding&&!is_on_ground&&is_in_water, 0, -torad(head_yaw)/45/2.5*clamp(1-limb_speed*2, 0, 1) +head.tx/10*0 +cos(pi/8 +var.cast)/50*clamp(-3+var.spell*4, 0, 1) )",
					"right_leg.tx": "-2",
					"left_leg.tx": "  2",
					"right_leg.ty": "24 +if(!is_riding&&!is_on_ground&&is_in_water, body.ty -0.8*clamp(limb_speed*8, 0, 1), clamp( cos(var.ls)*2*var.walk/2 +clamp(5-limb_speed*7, -2, 0)*1.5 +(-sin(torad(-30)+var.ls)*2 +head.ty)*clamp(-4+limb_speed*5, 0, 1), -8, 0.2)    ) -sin(hurt_time*pi/10)*2",
					"left_leg.ty": " 24 +if(!is_riding&&!is_on_ground&&is_in_water, body.ty -0.8*clamp(limb_speed*8, 0, 1), clamp(-cos(var.ls)*2*var.walk/2 +clamp(5-limb_speed*7, -2, 0)*1.5 +( sin(torad(-30)+var.ls)*2 +head.ty)*clamp(-4+limb_speed*5, 0, 1), -8, 0.2)    ) -sin(hurt_time*pi/10)*2",
					"right_leg.tz": "    if(!is_riding&&!is_on_ground&&is_in_water, todeg(body.rx)/6 -sin(pi/4+var.swim)/1.5 -cos(pi/4+var.swim)/2*0, asin( sin(var.ls))*4*var.walk                                                 +(-1 +sin(var.ls)*8.2 )*clamp(-4+limb_speed*5, 0, 1) +limb_speed*4/(2+(3*var.walk)))",
					"left_leg.tz": "     if(!is_riding&&!is_on_ground&&is_in_water, todeg(body.rx)/6 +sin(pi/4+var.swim)/1.5 +cos(pi/4+var.swim)/2*0, asin(-sin(var.ls))*4*var.walk                                                 +(-1 -sin(var.ls)*8.2 )*clamp(-4+limb_speed*5, 0, 1) +limb_speed*4/(2+(3*var.walk)))",
					"right_leg2.rx": "if(is_riding, -torad(80), !is_riding&&!is_on_ground&&is_in_water,  cos(pi/4+var.swim-sin(var.swim)/2*clamp(limb_speed*8, 0, 1))/3 +torad(20*clamp(limb_speed*8, 0, 1)), 0) +(-sin(limb_swing/2)/4 -torad(20) )*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"left_leg2.rx": " if(is_riding, -torad(80), !is_riding&&!is_on_ground&&is_in_water, -cos(pi/4+var.swim+sin(var.swim)/2*clamp(limb_speed*8, 0, 1))/3 +torad(20*clamp(limb_speed*8, 0, 1)), 0) +( sin(limb_swing/2)/4 -torad(20) )*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"right_leg2.ry": "if(is_riding,  torad(20), !is_riding&&!is_on_ground&&is_in_water, body.ry, 0)",
					"left_leg2.ry": " if(is_riding, -torad(20), !is_riding&&!is_on_ground&&is_in_water, body.ry, 0)",
					"right_leg2.rz": "-(sin(limb_swing/2)/2 -pi/2)/6*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"left_leg2.rz": "  (sin(limb_swing/2)/2 -pi/2)/6*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)"
				},
				{
					"r_eye_top.ty": "clamp(head_pitch/60, -0.8, 0.5) +(-0.2 +sin(-random(id))/4)*-sin(var.spell*pi*1.5)*var.spell +clamp(2*var.nov1, 0, 0.3) +(-1.5 -cos(limb_swing/3)/2)/4*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"l_eye_top.ty": "clamp(head_pitch/60, -0.8, 0.5) +(-0.2 +sin(-random(id))/4)*-sin(var.spell*pi*1.5)*var.spell +clamp(2*var.nov1, 0, 0.3) +(-1.5 -cos(limb_swing/3)/2)/4*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"ctrl_r_pupil.tx": " 0.5 -head_yaw/if(var.spell>0, 180, 80 +160*var.ylook) +(-sin(pi/4+var.r+age/10)*3 -0.3 )*clamp(var.nov1*4, 0, 1)",
					"ctrl_l_pupil.tx": "-0.5 -head_yaw/if(var.spell>0, 180, 80 +160*var.ylook) +(-sin(pi/4+var.r+age/10)*3 +0.3 )*clamp(var.nov1*4, 0, 1)",
					"ctrl_r_pupil.ty": " 0.5 +clamp(head_pitch/80, -0.5, 0.5) +(-0.3 +sin(-var.r)/2)/4*-sin(var.spell*pi*1.5)*var.spell +( -cos(var.r+var.b +sin(var.r+var.b) )/4 )*var.nov2 +clamp(2*var.nov1, 0, 0.3) -(-torad(5 +15*random(id))*clamp(sin(limb_speed*3), 0, 1) ) +(-1 -cos(limb_swing/3)/2)*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"ctrl_l_pupil.ty": "ctrl_r_pupil.ty",
					"right_blink.sy": "clamp(1.5 -abs(sin(var.r+age/8)*6), 0, 1)*clamp(-32 +cos((var.r+age/8)/1.5)*40 +cos((var.r+age/8)/4)*40, 0, 1)",
					"left_blink.sy": "right_blink.sy",
					"right_brow.tx": "-2 +( 0.2)*clamp(var.spell*2, 0, 1) +( cos(-pi/3 +var.r+var.b )/6 +0.05 )*var.nov2",
					"left_brow.tx": "  2 +(-0.2)*clamp(var.spell*2, 0, 1) -( cos(-pi/3 +var.r+var.b )/6 +0.05 )*var.nov2",
					"right_brow.ty": "-24-4.5 +clamp(-sin(var.r+age /110)*4, -0.3, 0   ) +clamp(head_pitch/60, -0.8, 0.5)*1.2 +clamp(-torad(head_yaw)/2, -0.5, 0.2)*clamp(-sin(var.r+age/90)*6, 0, 1)*(0.6+0.4*var.ylook*random(id)) +(-1 +sin(-var.r)/3)*-sin(var.spell*pi*1.5)*var.spell -sin(hurt_time*pi/10)*(1.5 +sin(limb_swing/3)) +if(limb_speed>0.9, sin(pi/4+var.ls*2)/4*limb_speed*(1+random(sin(id))), 0) +( cos(-pi/3 +var.r+var.b )/1.5 -0.1 )*var.nov2 -0.2*var.nov1",
					"left_brow.ty": " -24-4.5 +clamp(-sin(var.r+age /110)*4, -0.3, 0   ) +clamp(head_pitch/60, -0.8, 0.5)*1.2 +clamp( torad(head_yaw)/2, -0.5, 0.2)*clamp(-sin(var.r+age/90)*6, 0, 1)*(0.6+0.4*var.ylook*random(id)) +(-1 +cos(-var.r)/3)*-sin(var.spell*pi*1.5)*var.spell -sin(hurt_time*pi/10)*(1.5 +sin(limb_swing/3)) +if(limb_speed>0.9, sin(     var.ls*2)/4*limb_speed*(1+random(cos(id))), 0) +( cos(-pi/3 +var.r+var.b )/1.5 -0.1 )*var.nov2 -0.2*var.nov1",
					"right_brow.rz": "      clamp( sin(var.r+age /110), 0, torad( 5)) +(torad( 10))*clamp(var.spell*2, 0, 1) +( cos(-pi/3 +var.r+var.b )/10 +torad(2) )*var.nov2",
					"left_brow.rz": "       clamp(-sin(var.r+age /110), torad(-5), 0) +(torad(-10))*clamp(var.spell*2, 0, 1) -( cos(-pi/3 +var.r+var.b )/10 +torad(2) )*var.nov2",
					"nose2.rx": "      cos(var.ls*2)/8*limb_speed +clamp(-torad(head_pitch)/3 +( -cos(pi/3 +var.r+var.b +sin(var.r+var.b) )/6 )*var.nov2, -pi/4, pi/40) +(-cos(limb_swing/2)/4 -torad(20))*2*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"nose2.rz": "clamp(cos(var.ls  )/6*limb_speed -torad(head_yaw)/6*clamp(2-limb_speed*4, -1.5, 0) +if(!is_riding&&age>10, -(head.ry-var.y)*1.5 -(rot_y-var.z)*2, 0), -pi/4, pi/4) -head.rz/2"
				},
				{
					"right_eye.sz": "if(between(player_pos_x-pos_x, -30, 30)&&between(player_pos_y-pos_y, -30, 30)&&between(player_pos_z-pos_z, -30, 30), 1, 2)",
					"left_eye.sz": "right_eye.sz",
					"right_eye_white.sx": "2",
					"right_eye_white.sy": "clamp(1 -(r_eye_top.ty), 0.5, 3)",
					"r_eye_pupil.tx": "clamp(ctrl_r_pupil.tx, -0.5, 0.5)",
					"r_eye_pupil.ty": "clamp(ctrl_r_pupil.ty, r_eye_top.ty, 1)",
					"r_eye_pupil_up.sy": "clamp(1 -(ctrl_r_pupil.ty-0.5)              , 0.5, clamp(1-r_eye_top.ty, 0.5, 1))",
					"r_eye_pupil_do.sy": "clamp(1 +(ctrl_r_pupil.ty-0.5) -r_eye_top.ty, 0.5, 1)",
					"r_eye_pupil_in.sx": "clamp(1 -(ctrl_r_pupil.tx-0.5)              , 0.75, 1)",
					"r_eye_pupil_ou.sx": "clamp(1 +(ctrl_r_pupil.tx+0.5)              , 1, 1)",
					"right_eyelid.sy": "clamp(right_eye_white.sy, 1, 4)",
					"right_eyelid.sz": "if(right_eyelid.sy==0||right_blink.sy==0, 0, 1)",
					"right_eyelid.tz": "0",
					"left_eye_white.sx": "2",
					"left_eye_white.sy": "clamp(1 -(l_eye_top.ty), 0.5, 3)",
					"l_eye_pupil.tx": "clamp(ctrl_l_pupil.tx, -0.5, 0.5)",
					"l_eye_pupil.ty": "clamp(ctrl_l_pupil.ty, l_eye_top.ty, 1)",
					"l_eye_pupil_up.sy": "clamp(1 -(ctrl_l_pupil.ty-0.5)              , 0.5, clamp(1-l_eye_top.ty, 0.5, 1))",
					"l_eye_pupil_do.sy": "clamp(1 +(ctrl_l_pupil.ty-0.5) -l_eye_top.ty, 0.5, 1)",
					"l_eye_pupil_in.sx": "clamp(1 -(ctrl_l_pupil.tx-0.5)              , 1, 1)",
					"l_eye_pupil_ou.sx": "clamp(1 +(ctrl_l_pupil.tx+0.5)              , 0.75, 1)",
					"left_eyelid.sy": "clamp(left_eye_white.sy, 1, 4)",
					"left_eyelid.sz": "if(left_eyelid.sy==0||left_blink.sy==0, 0, 1)",
					"left_eyelid.tz": "0"
				},
				{
					"var.y": "var.y2",
					"var.y2": "var.y3",
					"var.y3": "head.ry",
					"var.z": "var.z2",
					"var.z2": "var.z3",
					"var.z3": "rot_y"
				}
			]
		},
		{
			"part": "nose",
			"id": "nose",
			"invertAxis": "xy",
			"translate": [0, -24, 0],
			"boxes": [
				{"coordinates": [-4, 24, -4, 8, 10, 8], "textureOffset": [0, 0]},
				{"coordinates": [-5, 32, -5, 10, 8, 10], "textureOffset": [24, 109]},
				{"coordinates": [-4, 24, -4, 8, 10, 8], "textureOffset": [32, 127], "sizeAdd": 0.24},
				{"coordinates": [-2, 34, -2, 4, 11, 4], "textureOffset": [48, 3]}
			],
			"submodels": [
				{
					"id": "headwear",
					"invertAxis": "xy",
					"translate": [-5, 34.05, -5],
					"boxes": [
						{"coordinates": [-3, -2, -3, 16, 2, 16], "textureOffset": [0, 160]},
						{"coordinates": [1, 0, 1, 8, 5, 8], "textureOffset": [16, 146]}
					],
					"submodels": [
						{
							"id": "hat2",
							"invertAxis": "xy",
							"translate": [8.25, 9, 2],
							"rotate": [3, 0, 1.5],
							"boxes": [
								{"coordinates": [-7, -4, 0, 7, 4, 7], "textureOffset": [0, 76]}
							],
							"submodels": [
								{
									"id": "hat3",
									"invertAxis": "xy",
									"translate": [-1.75, 4, 2],
									"rotate": [6, 0, 3],
									"boxes": [
										{"coordinates": [-4, -4, 0, 4, 4, 4], "textureOffset": [0, 87]}
									],
									"submodels": [
										{
											"id": "hat4",
											"invertAxis": "xy",
											"translate": [-1.75, 2, 2],
											"rotate": [12, 0, 6],
											"boxes": [
												{"coordinates": [-1, -2, 0, 1, 2, 1], "textureOffset": [0, 95], "sizeAdd": 0.25}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"id": "right_eye",
					"invertAxis": "xy",
					"mirrorTexture": "u",
					"translate": [2, 28, -4],
					"submodels": [
						{
							"id": "r_eye_top",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [0, 0, 0.025]
						},
						{
							"id": "r_eye_pupil",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [-0.5, -0.5, 0],
							"submodels": [
								{
									"id": "r_eye_pupil_in",
									"invertAxis": "xy",
									"mirrorTexture": "u",
									"translate": [-0.5, 0, 0],
									"submodels": [
										{
											"id": "r_eye_pupil_ou",
											"invertAxis": "xy",
											"mirrorTexture": "u",
											"translate": [1, 0, 0],
											"submodels": [
												{
													"id": "r_eye_pupil_do",
													"invertAxis": "xy",
													"mirrorTexture": "u",
													"translate": [-0.5, -0.5, 0],
													"submodels": [
														{
															"id": "r_eye_pupil_up",
															"invertAxis": "xy",
															"mirrorTexture": "u",
															"translate": [0, 1, 0],
															"boxes": [
																{
																	"coordinates": [-0.5, -1, -0.07, 1, 1, 0.3],
																	"uvNorth": [2, 2.00265, 3, 3.00278],
																	"uvEast": [2, 2.00265, 2.25, 3.00278],
																	"uvSouth": [3, 2.00265, 2, 3.00278],
																	"uvWest": [2.75, 2.00265, 3, 3.00278],
																	"uvUp": [3, 2.25268, 2, 2.00265],
																	"uvDown": [3, 3.00278, 2, 2.75275],
																	"sizeAdd": 0.005
																}
															]
														}
													]
												}
											]
										}
									]
								}
							]
						},
						{
							"id": "right_eye_white",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [1, -1, 0],
							"boxes": [
								{
									"coordinates": [-1, 0, -0.03, 1, 1, 0.25],
									"uvNorth": [1, 2.00265, 2, 3.00278],
									"uvEast": [1, 2.00265, 1.25, 3.00278],
									"uvSouth": [2, 2.00265, 1, 3.00278],
									"uvWest": [1.75, 2.00265, 2, 3.00278],
									"uvUp": [2, 2.25268, 1, 2.00265],
									"uvDown": [2, 3.00278, 1, 2.75275]
								}
							]
						},
						{
							"id": "right_eyelid",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [0, -1, 1],
							"submodels": [
								{
									"id": "right_blink",
									"invertAxis": "xy",
									"mirrorTexture": "u",
									"translate": [0, 1, 0],
									"boxes": [
										{
											"coordinates": [-1, -1, -0.08, 2, 1, 0.3],
											"uvNorth": [1, 3.00278, 3, 4.0029],
											"uvEast": [1, 3.00278, 1.25, 4.0029],
											"uvSouth": [3, 3.00278, 1, 4.0029],
											"uvWest": [2.75, 3.00278, 3, 4.0029],
											"uvUp": [3, 3.00278, 1, 3.25281],
											"uvDown": [3, 4.0029, 1, 3.75287],
											"sizeAdd": 0.015
										}
									]
								}
							]
						},
						{
							"id": "ctrl_r_pupil",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [0, 0, 0]
						}
					]
				},
				{
					"id": "left_eye",
					"invertAxis": "xy",
					"mirrorTexture": "u",
					"translate": [-2, 28, -4],
					"submodels": [
						{
							"id": "l_eye_top",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [0, 0, 0.025]
						},
						{
							"id": "l_eye_pupil",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [0.5, -0.5, 0],
							"submodels": [
								{
									"id": "l_eye_pupil_in",
									"invertAxis": "xy",
									"mirrorTexture": "u",
									"translate": [-0.5, 0, 0],
									"submodels": [
										{
											"id": "l_eye_pupil_ou",
											"invertAxis": "xy",
											"mirrorTexture": "u",
											"translate": [1, 0, 0],
											"submodels": [
												{
													"id": "l_eye_pupil_do",
													"invertAxis": "xy",
													"mirrorTexture": "u",
													"translate": [-0.5, -0.5, 0],
													"submodels": [
														{
															"id": "l_eye_pupil_up",
															"invertAxis": "xy",
															"mirrorTexture": "u",
															"translate": [0, 1, 0],
															"boxes": [
																{
																	"coordinates": [-0.5, -1, -0.07, 1, 1, 0.3],
																	"uvNorth": [2, 2.00265, 3, 3.00278],
																	"uvEast": [2, 2.00265, 2.25, 3.00278],
																	"uvSouth": [3, 2.00265, 2, 3.00278],
																	"uvWest": [2.75, 2.00265, 3, 3.00278],
																	"uvUp": [3, 2.25268, 2, 2.00265],
																	"uvDown": [3, 3.00278, 2, 2.75275],
																	"sizeAdd": 0.005
																}
															]
														}
													]
												}
											]
										}
									]
								}
							]
						},
						{
							"id": "left_eye_white",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [-1, -1, 0],
							"boxes": [
								{
									"coordinates": [0, 0, -0.03, 1, 1, 0.25],
									"uvNorth": [6, 2.00265, 7, 3.00278],
									"uvEast": [6, 2.00265, 6.25, 3.00278],
									"uvSouth": [7, 2.00265, 6, 3.00278],
									"uvWest": [6.75, 2.00265, 7, 3.00278],
									"uvUp": [7, 2.25268, 6, 2.00265],
									"uvDown": [7, 3.00278, 6, 2.75275]
								}
							]
						},
						{
							"id": "left_eyelid",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [0, -1, 1],
							"submodels": [
								{
									"id": "left_blink",
									"invertAxis": "xy",
									"mirrorTexture": "u",
									"translate": [0, 1, 0],
									"boxes": [
										{
											"coordinates": [-1, -1, -0.08, 2, 1, 0.3],
											"uvNorth": [5, 3.00278, 7, 4.0029],
											"uvEast": [5, 3.00278, 5.25, 4.0029],
											"uvSouth": [7, 3.00278, 5, 4.0029],
											"uvWest": [6.75, 3.00278, 7, 4.0029],
											"uvUp": [7, 3.00278, 5, 3.25281],
											"uvDown": [7, 4.0029, 5, 3.75287],
											"sizeAdd": 0.015
										}
									]
								}
							]
						},
						{
							"id": "ctrl_l_pupil",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [0, 0, 0]
						}
					]
				},
				{
					"id": "left_brow",
					"invertAxis": "xy",
					"translate": [-2, 28.5, -4],
					"boxes": [
						{
							"coordinates": [-1.98, -0.5, -0.25, 3, 1, 0.25],
							"uvNorth": [5, 1.00253, 8, 2.00265],
							"uvEast": [5, 1.00253, 5.25, 2.00265],
							"uvSouth": [8, 1.00253, 5, 2.00265],
							"uvWest": [7.75, 1.00253, 8, 2.00265],
							"uvUp": [8, 1.25256, 5, 1.00253],
							"uvDown": [8, 2.00265, 5, 1.75262]
						},
						{
							"coordinates": [-1.98, 0.5, -0.25, 2, 1, 0.25],
							"uvNorth": [6, 0.0024, 8, 1.00253],
							"uvEast": [6, 0.0024, 7, 1.00253],
							"uvSouth": [8, 0.0024, 6, 1.00253],
							"uvWest": [7.85, 0.0024, 8, 1.00253],
							"uvUp": [8, 1.00253, 6, 0.0024],
							"uvDown": [8, 1.00253, 6, 0.85251]
						}
					]
				},
				{
					"id": "right_brow",
					"invertAxis": "xy",
					"translate": [2, 28.5, -4],
					"boxes": [
						{
							"coordinates": [-1.02, -0.5, -0.25, 3, 1, 0.25],
							"uvNorth": [0, 1.00253, 3, 2.00265],
							"uvEast": [0, 1.00253, 0.25, 2.00265],
							"uvSouth": [3, 1.00253, 0, 2.00265],
							"uvWest": [2.75, 1.00253, 3, 2.00265],
							"uvUp": [3, 1.25256, 0, 1.00253],
							"uvDown": [3, 2.00265, 0, 1.75262]
						},
						{
							"coordinates": [-0.02, 0.5, -0.25, 2, 1, 0.25],
							"uvNorth": [0, 0.0024, 2, 1.00253],
							"uvEast": [0, 0.0024, 1, 1.00253],
							"uvSouth": [2, 0.0024, 0, 1.00253],
							"uvWest": [1.85, 0.0024, 2, 1.00253],
							"uvUp": [2, 1.00253, 0, 0.0024],
							"uvDown": [2, 1.00253, 0, 0.85251]
						}
					]
				},
				{
					"id": "nose2",
					"invertAxis": "xy",
					"translate": [0, 26.5, -4],
					"boxes": [
						{"coordinates": [-1, -3.5, -2, 2, 4, 2], "textureOffset": [24, 0]}
					]
				}
			]
		},
		{
			"part": "body",
			"id": "body",
			"invertAxis": "xy",
			"translate": [0, -24, 0],
			"boxes": [
				{"coordinates": [-4, 12, -3, 8, 12, 6], "textureOffset": [16, 20]}
			],
			"submodels": [
				{
					"id": "coat",
					"invertAxis": "xy",
					"translate": [0, 22, 0],
					"boxes": [
						{"coordinates": [-4, -18, -3, 8, 20, 6], "textureOffset": [0, 38], "sizeAdd": 0.25}
					]
				},
				{
					"id": "cape",
					"invertAxis": "xy",
					"translate": [0, 24, 3],
					"rotate": [-10, 0, 0],
					"boxes": [
						{"coordinates": [-5, -16, 0, 10, 16, 1], "textureOffset": [42, 92]}
					]
				}
			]
		},
		{
			"part": "arms",
			"id": "arms",
			"invertAxis": "xy",
			"translate": [0, -24, 0],
			"submodels": [
				{
					"id": "arms_rotation",
					"invertAxis": "xy",
					"translate": [0, 22.5, 0.35],
					"rotate": [43, 0, 0],
					"boxes": [
						{"coordinates": [4, -8, -2.05, 4, 8, 4], "textureOffset": [44, 22.00278]},
						{"coordinates": [-4, -8, -2.05, 8, 4, 4], "textureOffset": [40, 38.0048]}
					],
					"submodels": [
						{
							"id": "arms_flipped",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [0, -24, 0],
							"boxes": [
								{"coordinates": [-8, 16, -2.05, 4, 8, 4], "textureOffset": [44, 22.00278]}
							]
						}
					]
				}
			]
		},
		{
			"part": "right_arm",
			"id": "right_arm",
			"invertAxis": "xy",
			"translate": [-5, -22, 0],
			"boxes": [
				{"coordinates": [4, 12, -2, 4, 12, 4], "textureOffset": [40, 46.00581]}
			]
		},
		{
			"part": "left_arm",
			"id": "left_arm",
			"invertAxis": "xy",
			"mirrorTexture": "u",
			"translate": [5, -22, 0],
			"submodels": [
				{
					"id": "left_arm_sub_1",
					"invertAxis": "xy",
					"mirrorTexture": "u",
					"translate": [0, 0, 0],
					"boxes": [
						{"coordinates": [-8, 12, -2, 4, 12, 4], "textureOffset": [40, 46.00581]}
					]
				}
			]
		},
		{
			"part": "right_leg",
			"id": "right_leg",
			"invertAxis": "xy",
			"translate": [-2, 0, 0],
			"submodels": [
				{
					"id": "right_leg2",
					"invertAxis": "xy",
					"translate": [2, 12, 0],
					"boxes": [
						{"coordinates": [-2, -12, -2, 4, 12, 4], "textureOffset": [0, 22.00278]}
					]
				}
			]
		},
		{
			"part": "left_leg",
			"id": "left_leg",
			"invertAxis": "xy",
			"mirrorTexture": "u",
			"translate": [2, 0, 0],
			"submodels": [
				{
					"id": "left_leg2",
					"invertAxis": "xy",
					"mirrorTexture": "u",
					"translate": [-2, 12, 0],
					"submodels": [
						{
							"id": "left_leg_sub_1",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [2, -12, 0],
							"boxes": [
								{"coordinates": [-4, 0, -2, 4, 12, 4], "textureOffset": [0, 22.00278]}
							]
						}
					]
				}
			]
		},
		{
			"part": "hat",
			"id": "hat",
			"invertAxis": "xy",
			"translate": [0, 0, 0]
		},
		{
			"part": "nose",
			"id": "nose",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "nose",
			"id": "nose",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "nose",
			"id": "nose",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "body",
			"id": "body",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "arms",
			"id": "arms",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "right_arm",
			"id": "right_arm",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "left_arm",
			"id": "left_arm",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "right_leg",
			"id": "right_leg",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "left_leg",
			"id": "left_leg",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		}
	]
}