{
	"credit": "Made with Blockbench",
	"textureSize": [128, 64],
	"texture": "textures/entity/alchemist.png",
	"models": [
		{
			"part": "head",
			"id": "head",
			"invertAxis": "xy",
			"translate": [0, -24, 0],
			"scale": 1,
			"submodels": [
				{
					"id": "Created_by_FreshLX_for_Fresh_Animations",
					"invertAxis": "xy",
					"translate": [0, 0, 0]
				}
			],
			"animations": [
				{
					"var.hy": "clamp(head_yaw,-90,90)",
					"var.testing": "0",
					"varb.swim": "! is_riding && ! is_on_ground && is_in_water",
					"var.c_swim": "clamp(if(varb.swim, min(20, var.c_swim  +0.2 *frame_time*20), max(0, var.c_swim  -0.2 *frame_time*20)), 0, 1)",
					"var.r": "pi*random(id)*4",
					"var.b": "age /(11 -random(id)*2)",
					"var.ls": "limb_swing/if( limb_speed>0.85, 1, 1.2 )",
					"var.swim": "limb_swing/2 +age/3",
					"var.walk": "clamp(limb_speed*6, 0, 1)*clamp(9-limb_speed*10, 0, 1)",
					"var.ylook": "(0.5-0.5*cos( clamp(sin(var.r+age/60)*6, 0, 1)*pi ))*1.2",
					"var.nov1": "(0.5-0.5*cos( if(right_arm.visible, 0, clamp(-5.6 +cos(-pi/6 +var.r   +age/80)*6 , 0, 1))*pi ))*clamp(2-limb_speed*4, 0, 1)",
					"var.nov2": "(0.5-0.5*cos(                          clamp(-19  +cos(-pi/4 +var.r +var.b/10)*20, 0, 1) *pi ))*clamp(1-limb_speed*2, 0, 1)",
					"var.spellA": "clamp(if(right_arm.visible, min(20, var.spellA +0.1 *frame_time*20), max(0, var.spellA -0.1 *frame_time*20)), 0, 1)",
					"var.spell": "(0.5-0.5*cos( var.spellA*pi ))",
					"var.cast": "var.r+age/(1.4 +0.4*random(id))",
					"var.fps": "1",
					"var.y": "var.y2",
					"var.y2": "var.y3",
					"var.y3": "head.ry",
					"var.z": "var.z2",
					"var.z2": "var.z3",
					"var.z3": "rot_y",
					"var.spell_active": "clamp(var.spell*3, 0, 1)"
				},
				{
					"head.rx": "torad(head_pitch)/1.5 +sin(var.ls*2)/20*limb_speed +if(varb.swim, cos(var.swim*2)/30 +torad(-10) +torad(10*clamp(limb_speed*8, 0, 1)), (-torad(5 +15*random(id))*clamp(sin(limb_speed*3), 0, 1) )) +( cos(-pi/3 +var.r+var.b +sin(var.r+var.b))/4 -torad(10) )*var.nov2 +(sin(limb_swing/2)/4 +torad(20))*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0) +(-torad(8)*cos(var.spell*pi*1.5) -torad(10) )*var.spell_active",
					"head.ry": "torad(var.hy)/(1.8 -0.5*clamp(var.ylook +var.spell, 0, 1)) +sin(var.r+age/10 +sin(var.r*2+age/5)/2)/6 *var.nov1 *(1-var.spell_active) +(-cos(var.cast)/10 )*clamp(-3+var.spell*4, 0, 1)",
					"head.rz": "sin(var.r+age/10 +sin(var.r*2+age/5)/2)/20*var.nov1 *(1-var.spell_active) +cos(limb_swing/3)/3*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)*(1-var.spell_active)",
					"head.tx": "sin(torad(45)+var.ls)/3*limb_speed *(1-var.spell_active)",
					"head.ty": "if(varb.swim, -sin(var.swim*2)/2          , 0.3) +14*var.c_swim +limb_speed*var.walk -sin(torad(if(limb_speed>0.5, -45, 45))+var.ls*2)/(1+(2*var.walk))*limb_speed +sin(var.r +var.b)/6 +( cos(var.r+var.b +sin(var.r+var.b)*1.5)/2 +0.5 )*var.nov2",
					"head.tz": "if(varb.swim, -1*clamp(limb_speed*8, 0, 1), (-1.5*limb_speed) -sin(var.r +var.b)/6 -cos(var.ls*2)/2*clamp(limb_speed*3, 0, 1) +0.5*random(id) +clamp(-1+limb_speed*2, 0, 1) +clamp(torad(-head_pitch)*3, -2, 0) ) *(1-var.spell_active) +(sin(limb_swing/2) +2)*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)*(1-var.spell_active) +(-sin(var.spell*pi*1.5) -1 )*var.spell_active",
					"nose.rx": "head.rx*var.testing",
					"nose.ry": "head.ry*var.testing",
					"nose.rz": "head.rz*var.testing",
					"nose.tx": "head.tx*var.testing",
					"nose.ty": "-2 + head.ty*var.testing",
					"nose.tz": "head.tz*var.testing"
				},
				{
					"body.rx": "(((sin((limb_swing/2+age)/70*pi*2)/40)*(1-limb_speed)) + torad(5)*limb_speed) * (1-var.spell_active)",
					"body.ry": "(sin(torad(180)+limb_swing/1.2)/5*limb_speed/1.3) * (1-var.spell_active) + (var.hy/57.5)/6",
					"body.rz": "head.rz + (sin(torad( 45)+limb_swing/1.2)/15 *limb_speed/1.3) * (1-var.spell_active)",
					"body.tx": "head.tx",
					"body.ty": "head.ty",
					"body.tz": "head.tz"
				},
				{
					"arms.rx": "body.rx",
					"arms.ry": "body.ry",
					"arms.rz": "body.rz",
					"arms.tx": "body.tx",
					"arms.ty": "body.ty",
					"arms.tz": "body.tz",
					"arms_rotation.tx": "0",
					"arms_rotation.ty": "-21.75 + (sin(var.r +var.b-torad(60))/7 *(1-var.spell_active)) + ( cos(-pi/3 +var.r+var.b +sin(var.r+var.b)*1.5) -0.8 )*var.nov2 *(1-var.spell_active)",
					"arms_rotation.tz": "-0.5",
					"arms_rotation.rx": "(if(varb.swim, sin(pi/4+var.swim*2  )/16 -torad(20) -body.rx, 0) +( sin(torad(-45)+var.ls*2 -sin(var.ls*2)/3)/(6+(3*var.walk)) -torad(20))*limb_speed +( sin(-pi/3 +var.r+var.b +sin(var.r+var.b) )/6 )*var.nov2 +(sin(limb_swing/2) -pi/4)/2*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)) *(1-var.spell_active) + torad(-50 -120*sin(var.spell*2) +15*random(id) )",
					"arms_rotation.ry": "(if(varb.swim, sin(pi/4+var.swim  +sin(pi/4+var.swim*2)/3)/6, 0) + torad(var.hy)/6*clamp(1-limb_speed*2, 0, 1) - sin(torad(45)+var.ls)/3*clamp(-4+limb_speed*5, 0, 1)) *(1-var.spell_active)",
					"arms_rotation.rz": "0"
				},
				{
					"right_arm.tx": "-5 + body.tx",
					"left_arm.tx": "  5 + body.tx",
					"right_arm.ty": "2 + body.ty + (sin((limb_swing/2+age)/80*pi*2-torad(60))/5) * (1-var.spell_active)",
					"left_arm.ty": " 2 + body.ty + (sin((limb_swing/2+age)/80*pi*2-torad(60))/5) * (1-var.spell_active)",
					"right_arm.tz": "((-2*limb_speed) + sin((limb_swing/2+age)/80*-pi*2)/4 + (var.hy/57.5) + sin((limb_swing/2+age)/15*pi*2-torad(45))*1) * (1-var.spell_active)",
					"left_arm.tz": " ((-2*limb_speed) + sin((limb_swing/2+age)/80*-pi*2)/4 - (var.hy/57.5) - sin((limb_swing/2+age)/15*pi*2+torad(45))*1) * (1-var.spell_active)"
				},
				{
					"right_leg.rx": "if(is_riding, torad(-80), !is_riding&&!is_on_ground&&is_in_water, sin((limb_swing/2+age)/12*pi+torad( 0 ))/1.5, ((sin((limb_swing/2+age)/80*pi*2)/40)*(1-limb_speed)) +sin(torad( 0 )+limb_swing/1.2)*limb_speed/1.3 +torad(10)*limb_speed) -(var.hy/57.5)/30",
					"left_leg.rx": " if(is_riding, torad(-80), !is_riding&&!is_on_ground&&is_in_water, sin((limb_swing/2+age)/12*pi+torad(180))/1.5, ((sin((limb_swing/2+age)/80*pi*2)/40)*(1-limb_speed)) +sin(torad(180)+limb_swing/1.2)*limb_speed/1.3 +torad(10)*limb_speed) +(var.hy/57.5)/30",
					"right_leg.ry": "clamp(torad( 2 )-limb_speed, 0, torad( 2 )) +if(is_riding, torad( 20), 0)",
					"left_leg.ry": " clamp(torad(-5 )+limb_speed, torad(-5 ), 0) +if(is_riding, torad(-20), 0)",
					"right_leg.rz": "clamp(torad( 1 )-limb_speed, 0, torad( 1 ))",
					"left_leg.rz": " clamp(torad(-1 )+limb_speed, torad(-1 ), 0)",
					"right_leg.tx": "-2",
					"left_leg.tx": "  2",
					"right_leg.ty": "0.2 +clamp(12 +(sin(torad( 90)+limb_swing/1.2)*3)*limb_speed +(1*limb_speed), 0, 12.2) +if(is_riding, -2, if(!is_riding&&!is_on_ground&&is_in_water, head.ty, 0))",
					"left_leg.ty": " 0.2 +clamp(12 +(sin(torad(-90)+limb_swing/1.2)*3)*limb_speed +(1*limb_speed), 0, 12.2) +if(is_riding, -2, if(!is_riding&&!is_on_ground&&is_in_water, head.ty, 0))",
					"right_leg.tz": "sin(torad(180)+limb_swing/1.2)*1.2*limb_speed +if(is_riding, 0, sin((limb_swing/2+age)/80*pi*2+torad(180))/3) +(var.hy/57.5)/2",
					"left_leg.tz": " sin(torad( 0 )+limb_swing/1.2)*1.2*limb_speed +if(is_riding, 0, sin((limb_swing/2+age)/80*pi*2+torad(180))/3) -(var.hy/57.5)/2"
				},
				{
					"r_eye_top.ty": "clamp(head_pitch/60, -0.8, 0.5) +(-0.2 +sin(-random(id))/4)*var.spell +clamp(2*var.nov1, 0, 0.3) +(-1.5 -cos(limb_swing/3)/2)/4*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"l_eye_top.ty": "clamp(head_pitch/60, -0.8, 0.5) +(-0.2 +sin(-random(id))/4)*var.spell +clamp(2*var.nov1, 0, 0.3) +(-1.5 -cos(limb_swing/3)/2)/4*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"ctrl_r_pupil.tx": " 0.5 -var.hy/(80 +160*clamp(var.ylook +var.spell, 0, 1)) +(-sin(pi/4+var.r+age/10)*3 -0.3 )*clamp(var.nov1*4, 0, 1)",
					"ctrl_l_pupil.tx": "-0.5 -var.hy/(80 +160*clamp(var.ylook +var.spell, 0, 1)) +(-sin(pi/4+var.r+age/10)*3 +0.3 )*clamp(var.nov1*4, 0, 1)",
					"ctrl_r_pupil.ty": " 0.5 +clamp(head_pitch/80, -0.5, 0.5) +(-0.3 +sin(-var.r)/2)/4*var.spell +( -cos(var.r+var.b +sin(var.r+var.b) )/4 )*var.nov2 +clamp(2*var.nov1, 0, 0.3) -(-torad(5 +15*random(id))*clamp(sin(limb_speed*3), 0, 1) ) +(-1 -cos(limb_swing/3)/2)*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"ctrl_l_pupil.ty": "ctrl_r_pupil.ty",
					"right_blink.sy": "clamp(1.5 -abs(sin(var.r+age/8)*6), 0, 1)*clamp(-32 +cos((var.r+age/8)/1.5)*40 +cos((var.r+age/8)/4)*40, 0, 1)",
					"left_blink.sy": "right_blink.sy",
					"right_brow.tx": "-2 +( 0.2)*var.spell_active +( cos(-pi/3 +var.r+var.b )/6 +0.05 )*var.nov2 *(1-var.spell_active)",
					"left_brow.tx": "  2 +(-0.2)*var.spell_active -( cos(-pi/3 +var.r+var.b )/6 +0.05 )*var.nov2 *(1-var.spell_active)",
					"right_brow.ty": "-24-4.5 +clamp(-sin(var.r+age /110)*4, -0.3, 0   )*(1-var.spell_active) +clamp(head_pitch/60, -0.8, 0.5)*1.2 +clamp(-torad(var.hy)/2, -0.5, 0.2)*clamp(-sin(var.r+age/90)*6, 0, 1)*(0.6+0.4*var.ylook*random(id))*(1-var.spell_active) +(-1 +sin(-var.r)/3)*var.spell -sin(hurt_time*pi/10)*(1.5 +sin(limb_swing/3))*(1-var.spell_active) +if(limb_speed>0.9, sin(pi/4+var.ls*2)/4*limb_speed*(1+random(sin(id))), 0)*(1-var.spell_active) +( cos(-pi/3 +var.r+var.b )/1.5 -0.1 )*var.nov2*(1-var.spell_active) -0.2*var.nov1*(1-var.spell_active)",
					"left_brow.ty": " -24-4.5 +clamp(-sin(var.r+age /110)*4, -0.3, 0   )*(1-var.spell_active) +clamp(head_pitch/60, -0.8, 0.5)*1.2 +clamp( torad(var.hy)/2, -0.5, 0.2)*clamp(-sin(var.r+age/90)*6, 0, 1)*(0.6+0.4*var.ylook*random(id))*(1-var.spell_active) +(-1 +cos(-var.r)/3)*var.spell -sin(hurt_time*pi/10)*(1.5 +sin(limb_swing/3))*(1-var.spell_active) +if(limb_speed>0.9, sin(     var.ls*2)/4*limb_speed*(1+random(cos(id))), 0)*(1-var.spell_active) +( cos(-pi/3 +var.r+var.b )/1.5 -0.1 )*var.nov2*(1-var.spell_active) -0.2*var.nov1*(1-var.spell_active)",
					"right_brow.rz": "clamp( sin(var.r+age /110), 0, torad( 5))*(1-var.spell_active) +torad( 10)*var.spell_active +( cos(-pi/3 +var.r+var.b )/10 +torad(2) )*var.nov2 *(1-var.spell_active)",
					"left_brow.rz": "clamp(-sin(var.r+age /110), torad(-5), 0)*(1-var.spell_active) +torad(-10)*var.spell_active -( cos(-pi/3 +var.r+var.b )/10 +torad(2) )*var.nov2 *(1-var.spell_active)",
					"nose2.rx": "(cos(var.ls*2)/8*limb_speed +clamp(-torad(head_pitch)/3 +( -cos(pi/3 +var.r+var.b +sin(var.r+var.b) )/6 )*var.nov2, -pi/4, pi/40) +(-cos(limb_swing/2)/4 -torad(20))*2*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)) *(1-var.spell_active)",
					"nose2.rz": "(clamp(cos(var.ls  )/6*limb_speed -torad(var.hy)/6*clamp(2-limb_speed*4, -1.5, 0) +if(!is_riding&&age>10, -(head.ry-var.y)*var.fps*1.5 -(rot_y-var.z)*var.fps*2, 0), -pi/4, pi/4)/2 -head.rz/2) *(1-var.spell_active)"
				},
				{
					"right_eye.sz": "if(between(player_pos_x-pos_x, -30, 30)&&between(player_pos_y-pos_y, -30, 30)&&between(player_pos_z-pos_z, -30, 30), 1, 2)",
					"left_eye.sz": "right_eye.sz",
					"right_eye_white.sx": "2",
					"right_eye_white.sy": "clamp(1 -(r_eye_top.ty), 0.5, 3)",
					"r_eye_pupil.tx": "clamp(ctrl_r_pupil.tx, -0.5, 0.5)",
					"r_eye_pupil.ty": "clamp(ctrl_r_pupil.ty, r_eye_top.ty, 1)",
					"r_eye_pupil_up.sy": "clamp(1 -(ctrl_r_pupil.ty-0.5)              , 0.5, clamp(1-r_eye_top.ty, 0.5, 1))",
					"r_eye_pupil_do.sy": "clamp(1 +(ctrl_r_pupil.ty-0.5) -r_eye_top.ty, 0.5, 1)",
					"r_eye_pupil_in.sx": "clamp(1 -(ctrl_r_pupil.tx-0.5)              , 0.75, 1)",
					"r_eye_pupil_ou.sx": "clamp(1 +(ctrl_r_pupil.tx+0.5)              , 1, 1)",
					"right_eyelid.sy": "clamp(right_eye_white.sy, 1, 4)",
					"right_eyelid.sz": "if(right_eyelid.sy==0||right_blink.sy==0, 0, 1)",
					"right_eyelid.tz": "0",
					"left_eye_white.sx": "2",
					"left_eye_white.sy": "clamp(1 -(l_eye_top.ty), 0.5, 3)",
					"l_eye_pupil.tx": "clamp(ctrl_l_pupil.tx, -0.5, 0.5)",
					"l_eye_pupil.ty": "clamp(ctrl_l_pupil.ty, l_eye_top.ty, 1)",
					"l_eye_pupil_up.sy": "clamp(1 -(ctrl_l_pupil.ty-0.5)              , 0.5, clamp(1-l_eye_top.ty, 0.5, 1))",
					"l_eye_pupil_do.sy": "clamp(1 +(ctrl_l_pupil.ty-0.5) -l_eye_top.ty, 0.5, 1)",
					"l_eye_pupil_in.sx": "clamp(1 -(ctrl_l_pupil.tx-0.5)              , 1, 1)",
					"l_eye_pupil_ou.sx": "clamp(1 +(ctrl_l_pupil.tx+0.5)              , 0.75, 1)",
					"left_eyelid.sy": "clamp(left_eye_white.sy, 1, 4)",
					"left_eyelid.sz": "if(left_eyelid.sy==0||left_blink.sy==0, 0, 1)",
					"left_eyelid.tz": "0"
				},
				{
					"hat.rx": "head.rx",
					"hat.ry": "head.ry",
					"hat.rz": "head.rz",
					"hat.tx": "head.tx",
					"hat.ty": "head.ty",
					"hat.tz": "head.tz",
					"brim.rx": "head.rx",
					"brim.ry": "head.ry",
					"brim.rz": "head.rz",
					"brim.tx": "head.tx",
					"brim.ty": "head.ty",
					"brim.tz": "head.tz",
					"left_shoulder.rx": "body.rx",
					"left_shoulder.ry": "body.ry",
					"left_shoulder.rz": "body.rz",
					"left_shoulder.tx": "body.tx",
					"left_shoulder.ty": "body.ty",
					"left_shoulder.tz": "body.tz"
				}
			]
		},
		{
			"part": "nose",
			"id": "nose",
			"invertAxis": "xy",
			"translate": [0, -26, 0],
			"scale": 1,
			"boxes": [
				{"coordinates": [-4, 24, -4, 8, 10, 8], "textureOffset": [32, 0], "sizeAdd": 0.45},
				{"coordinates": [-8, 30.09, -8, 16, 0, 16], "textureOffset": [54, 48]}
			],
			"submodels": [
				{
					"id": "nose_sub_0",
					"invertAxis": "xy",
					"mirrorTexture": "u",
					"translate": [0, 0, 0],
					"boxes": [
						{
							"coordinates": [-4, 24, -4, 8, 10, 8],
							"uvNorth": [8, 8, 16, 18],
							"uvEast": [0, 8, 8, 18],
							"uvSouth": [24, 8, 32, 18],
							"uvWest": [16, 8, 24, 18],
							"uvUp": [16, 8, 8, 0],
							"uvDown": [24, 0, 16, 8]
						}
					]
				},
				{
					"id": "right_eye",
					"invertAxis": "xy",
					"mirrorTexture": "u",
					"translate": [2, 28, -4],
					"submodels": [
						{
							"id": "r_eye_top",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [0, 0, 0.025]
						},
						{
							"id": "r_eye_pupil",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [-0.5, -0.5, 0],
							"submodels": [
								{
									"id": "r_eye_pupil_in",
									"invertAxis": "xy",
									"mirrorTexture": "u",
									"translate": [-0.5, 0, 0],
									"submodels": [
										{
											"id": "r_eye_pupil_ou",
											"invertAxis": "xy",
											"mirrorTexture": "u",
											"translate": [1, 0, 0],
											"submodels": [
												{
													"id": "r_eye_pupil_do",
													"invertAxis": "xy",
													"mirrorTexture": "u",
													"translate": [-0.5, -0.5, 0],
													"submodels": [
														{
															"id": "r_eye_pupil_up",
															"invertAxis": "xy",
															"mirrorTexture": "u",
															"translate": [0, 1, 0],
															"boxes": [
																{
																	"coordinates": [-0.5, -1, -0.07, 1, 1, 0.3],
																	"uvNorth": [15, 21, 16, 22],
																	"uvEast": [15, 21, 15.25, 22],
																	"uvSouth": [16, 21, 15, 22],
																	"uvWest": [15.75, 21, 16, 22],
																	"uvUp": [16, 21.25, 15, 21],
																	"uvDown": [16, 22, 15, 21.75],
																	"sizeAdd": 0.005
																}
															]
														}
													]
												}
											]
										}
									]
								}
							]
						},
						{
							"id": "right_eye_white",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [1, -1, 0],
							"boxes": [
								{
									"coordinates": [-1, 0, -0.03, 1, 1, 0.25],
									"uvNorth": [14, 21, 15, 22],
									"uvEast": [14, 21, 14.25, 22],
									"uvSouth": [15, 21, 14, 22],
									"uvWest": [14.75, 21, 15, 22],
									"uvUp": [15, 21.25, 14, 21],
									"uvDown": [15, 22, 14, 21.75]
								}
							]
						},
						{
							"id": "right_eyelid",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [0, -1, 1],
							"submodels": [
								{
									"id": "right_blink",
									"invertAxis": "xy",
									"mirrorTexture": "u",
									"translate": [0, 1, 0],
									"boxes": [
										{
											"coordinates": [-1, -1, -0.08, 2, 1, 0.3],
											"uvNorth": [14, 22, 16, 23],
											"uvEast": [14, 22, 14.25, 23],
											"uvSouth": [16, 22, 14, 23],
											"uvWest": [15.75, 22, 16, 23],
											"uvUp": [16, 22, 14, 22.25],
											"uvDown": [16, 23, 14, 22.75],
											"sizeAdd": 0.015
										}
									]
								}
							]
						},
						{
							"id": "ctrl_r_pupil",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [0, 0, 0]
						}
					]
				},
				{
					"id": "left_eye",
					"invertAxis": "xy",
					"mirrorTexture": "u",
					"translate": [-2, 28, -4],
					"submodels": [
						{
							"id": "l_eye_top",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [0, 0, 0.025]
						},
						{
							"id": "l_eye_pupil",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [0.5, -0.5, 0],
							"submodels": [
								{
									"id": "l_eye_pupil_in",
									"invertAxis": "xy",
									"mirrorTexture": "u",
									"translate": [-0.5, 0, 0],
									"submodels": [
										{
											"id": "l_eye_pupil_ou",
											"invertAxis": "xy",
											"mirrorTexture": "u",
											"translate": [1, 0, 0],
											"submodels": [
												{
													"id": "l_eye_pupil_do",
													"invertAxis": "xy",
													"mirrorTexture": "u",
													"translate": [-0.5, -0.5, 0],
													"submodels": [
														{
															"id": "l_eye_pupil_up",
															"invertAxis": "xy",
															"mirrorTexture": "u",
															"translate": [0, 1, 0],
															"boxes": [
																{
																	"coordinates": [-0.5, -1, -0.07, 1, 1, 0.3],
																	"uvNorth": [15, 21, 16, 22],
																	"uvEast": [15, 21, 15.25, 22],
																	"uvSouth": [16, 21, 15, 22],
																	"uvWest": [15.75, 21, 16, 22],
																	"uvUp": [16, 21.25, 15, 21],
																	"uvDown": [16, 22, 15, 21.75],
																	"sizeAdd": 0.005
																}
															]
														}
													]
												}
											]
										}
									]
								}
							]
						},
						{
							"id": "left_eye_white",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [-1, -1, 0],
							"boxes": [
								{
									"coordinates": [0, 0, -0.03, 1, 1, 0.25],
									"uvNorth": [19, 21, 20, 22],
									"uvEast": [19, 21, 19.25, 22],
									"uvSouth": [20, 21, 19, 22],
									"uvWest": [19.75, 21, 20, 22],
									"uvUp": [20, 21.25, 19, 21],
									"uvDown": [20, 22, 19, 21.75]
								}
							]
						},
						{
							"id": "left_eyelid",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [0, -1, 1],
							"submodels": [
								{
									"id": "left_blink",
									"invertAxis": "xy",
									"mirrorTexture": "u",
									"translate": [0, 1, 0],
									"boxes": [
										{
											"coordinates": [-1, -1, -0.08, 2, 1, 0.3],
											"uvNorth": [18, 22, 20, 23],
											"uvEast": [18, 22, 18.25, 23],
											"uvSouth": [20, 22, 18, 23],
											"uvWest": [19.75, 22, 20, 23],
											"uvUp": [20, 22, 18, 22.25],
											"uvDown": [20, 23, 18, 22.75],
											"sizeAdd": 0.015
										}
									]
								}
							]
						},
						{
							"id": "ctrl_l_pupil",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [0, 0, 0]
						}
					]
				},
				{
					"id": "left_brow",
					"invertAxis": "xy",
					"translate": [-2, 28.5, -4],
					"boxes": [
						{
							"coordinates": [-1.98, -0.5, -0.25, 3, 1, 0.25],
							"uvNorth": [18, 20, 21, 21],
							"uvEast": [18, 20, 18.25, 21],
							"uvSouth": [21, 20, 18, 21],
							"uvWest": [20.75, 20, 21, 21],
							"uvUp": [21, 20.25, 18, 20],
							"uvDown": [21, 21, 18, 20.75]
						},
						{
							"coordinates": [-1.98, 0.5, -0.25, 2, 1, 0.25],
							"uvNorth": [19, 19, 21, 20],
							"uvEast": [19, 19, 20, 20],
							"uvSouth": [21, 19, 19, 20],
							"uvWest": [20.85, 19, 21, 20],
							"uvUp": [21, 20, 19, 19],
							"uvDown": [21, 20, 19, 19.85]
						},
						{
							"coordinates": [-2.98, 0.5, -0.25, 1, 2, 0.25],
							"uvNorth": [21, 18, 22, 20],
							"uvEast": [21, 18, 22, 20],
							"uvSouth": [22, 18, 21, 20],
							"uvWest": [21.85, 18, 22, 20],
							"uvUp": [22, 20, 21, 18],
							"uvDown": [22, 20, 21, 19.85]
						}
					]
				},
				{
					"id": "right_brow",
					"invertAxis": "xy",
					"translate": [2, 28.5, -4],
					"boxes": [
						{
							"coordinates": [-1.02, -0.5, -0.25, 3, 1, 0.25],
							"uvNorth": [13, 20, 16, 21],
							"uvEast": [13, 20, 13.25, 21],
							"uvSouth": [16, 20, 13, 21],
							"uvWest": [15.75, 20, 16, 21],
							"uvUp": [16, 20.25, 13, 20],
							"uvDown": [16, 21, 13, 20.75]
						},
						{
							"coordinates": [-0.02, 0.5, -0.25, 2, 1, 0.25],
							"uvNorth": [13, 19, 15, 20],
							"uvEast": [13, 19, 14, 20],
							"uvSouth": [15, 19, 13, 20],
							"uvWest": [14.85, 19, 15, 20],
							"uvUp": [15, 20, 13, 19],
							"uvDown": [15, 20, 13, 19.85]
						},
						{
							"coordinates": [2.02, 0.5, -0.25, 1, 2, 0.25],
							"uvNorth": [12, 18, 13, 20],
							"uvEast": [12, 18, 13, 20],
							"uvSouth": [13, 18, 12, 20],
							"uvWest": [12.85, 18, 13, 20],
							"uvUp": [13, 20, 12, 18],
							"uvDown": [13, 20, 12, 19.85]
						}
					]
				},
				{
					"id": "nose2",
					"invertAxis": "xy",
					"translate": [0, 26.5, -4],
					"boxes": [
						{
							"coordinates": [-1, -3.5, -2, 2, 4, 2],
							"uvNorth": [26, 2, 28, 6],
							"uvEast": [24, 2, 26, 6],
							"uvSouth": [30, 2, 32, 6],
							"uvWest": [28, 2, 30, 6],
							"uvUp": [28, 2, 26, 0],
							"uvDown": [30, 0, 28, 2]
						}
					]
				}
			]
		},
		{
			"part": "arms",
			"id": "arms",
			"invertAxis": "xy",
			"translate": [0, -24, 0],
			"submodels": [
				{
					"id": "arms_rotation",
					"invertAxis": "xy",
					"translate": [0, 22.5, 0.35],
					"rotate": [43, 0, 0],
					"boxes": [
						{
							"coordinates": [4, -8, -2.05, 4, 8, 4],
							"uvNorth": [48, 26, 52, 34],
							"uvEast": [44, 26, 48, 34],
							"uvSouth": [56, 26, 60, 34],
							"uvWest": [52, 26, 56, 34],
							"uvUp": [52, 26, 48, 22],
							"uvDown": [56, 22, 52, 26]
						},
						{
							"coordinates": [-4, -8, -2.05, 8, 4, 4],
							"uvNorth": [44, 42, 53, 46],
							"uvEast": [40, 42, 44, 46],
							"uvSouth": [56, 42, 64, 46],
							"uvWest": [53, 42, 56, 46],
							"uvUp": [53, 42, 44, 38],
							"uvDown": [60, 38, 53, 42]
						}
					],
					"submodels": [
						{
							"id": "arms_flipped",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [0, -24, 0],
							"boxes": [
								{
									"coordinates": [-8, 16, -2.05, 4, 8, 4],
									"uvNorth": [48, 26, 52, 34],
									"uvEast": [44, 26, 48, 34],
									"uvSouth": [56, 26, 60, 34],
									"uvWest": [52, 26, 56, 34],
									"uvUp": [52, 26, 48, 22],
									"uvDown": [56, 22, 52, 26]
								}
							]
						}
					]
				}
			]
		},
		{
			"part": "right_arm",
			"id": "right_arm",
			"invertAxis": "xy",
			"translate": [-5, -22, 0],
			"scale": 1,
			"boxes": [
				{"coordinates": [4, 12, -2, 4, 12, 4], "textureOffset": [40, 46]}
			]
		},
		{
			"part": "left_arm",
			"id": "left_arm",
			"invertAxis": "xy",
			"translate": [5, -22, 0],
			"scale": 1,
			"submodels": [
				{
					"id": "left_arm_sub_0",
					"invertAxis": "xy",
					"mirrorTexture": "u",
					"translate": [0, 0, 0],
					"boxes": [
						{
							"coordinates": [-8, 12, -2, 4, 12, 4],
							"uvNorth": [44, 50, 48, 62],
							"uvEast": [40, 50, 44, 62],
							"uvSouth": [52, 50, 56, 62],
							"uvWest": [48, 50, 52, 62],
							"uvUp": [48, 50, 44, 46],
							"uvDown": [52, 46, 48, 50]
						}
					]
				}
			]
		},
		{
			"part": "right_leg",
			"id": "right_leg",
			"invertAxis": "xy",
			"translate": [-2, -12, 0],
			"scale": 1,
			"boxes": [
				{"coordinates": [0, 0, -2, 4, 12, 4], "textureOffset": [0, 22]}
			]
		},
		{
			"part": "left_leg",
			"id": "left_leg",
			"invertAxis": "xy",
			"translate": [2, -12, 0],
			"scale": 1,
			"submodels": [
				{
					"id": "left_leg_sub_0",
					"invertAxis": "xy",
					"mirrorTexture": "u",
					"translate": [0, 0, 0],
					"boxes": [
						{
							"coordinates": [-4, 0, -2, 4, 12, 4],
							"uvNorth": [4, 26, 8, 38],
							"uvEast": [0, 26, 4, 38],
							"uvSouth": [12, 26, 16, 38],
							"uvWest": [8, 26, 12, 38],
							"uvUp": [8, 26, 4, 22],
							"uvDown": [12, 22, 8, 26]
						}
					]
				}
			]
		},
		{
			"part": "root",
			"id": "root",
			"invertAxis": "xy",
			"translate": [0, -24, 0],
			"scale": 1
		},
		{
			"part": "hat",
			"id": "hat",
			"invertAxis": "xy",
			"translate": [0, -24, 0],
			"scale": 1
		},
		{
			"part": "brim",
			"id": "brim",
			"invertAxis": "xy",
			"translate": [0, -24, 0],
			"scale": 1
		},
		{
			"part": "body",
			"id": "body",
			"invertAxis": "xy",
			"translate": [0, -24, 0],
			"scale": 1,
			"boxes": [
				{"coordinates": [-4, 12, -3, 8, 12, 6], "textureOffset": [16, 20]},
				{"coordinates": [-4, 6, -3, 8, 18, 6], "textureOffset": [0, 38], "sizeAdd": 0.5}
			]
		},
		{
			"part": "left_shoulder",
			"id": "left_shoulder",
			"invertAxis": "xy",
			"translate": [0, -21, 1],
			"scale": 1
		}
	]
}