{
	"credit": "Made with Blockbench",
	"textureSize": [256, 128],
	"models": [
		{
			"part": "body",
			"id": "body",
			"invertAxis": "xy",
			"translate": [0, -19, -2],
			"submodels": [
				{
					"id": "Created_by_FreshLX_for_Fresh_Animations",
					"invertAxis": "xy",
					"translate": [0, 0, 0]
				},
				{
					"id": "rotation",
					"invertAxis": "xy",
					"translate": [0, 13, 2],
					"rotate": [-90, 0, 0],
					"boxes": [
						{
							"coordinates": [-4, -6, -1, 8, 16, 6],
							"uvNorth": [136, 56, 168, 120],
							"uvEast": [112, 56, 136, 120],
							"uvSouth": [192, 56, 224, 120],
							"uvWest": [168, 56, 192, 120],
							"uvUp": [168, 56, 136, 32],
							"uvDown": [200, 32, 168, 56],
							"sizeAdd": 1.75
						}
					]
				},
				{
					"id": "head2",
					"invertAxis": "xy",
					"translate": [0, 18, -8],
					"boxes": [
						{
							"coordinates": [-3, -2, -4, 6, 6, 6],
							"uvNorth": [24, 24, 48, 48],
							"uvEast": [0, 24, 24, 48],
							"uvSouth": [72, 24, 96, 48],
							"uvWest": [48, 24, 72, 48],
							"uvUp": [48, 24, 24, 0],
							"uvDown": [72, 0, 48, 24],
							"sizeAdd": 0.6
						}
					]
				}
			],
			"animations": [
				{
					"var.hy": "clamp(head_yaw,-90,90)",
					"var.r": "random(id)*pi*4",
					"var.ls": "limb_swing*if(is_child, 0.55, 0.85)",
					"var.b": "var.r +age/if(is_child, 5.5, 11)",
					"var.swim": "var.r +age/if(is_child, 1.8, 2.5)",
					"var.run": "clamp(if(limb_speed>=if(is_child, 0.52, 0.62), min(20, var.run +0.1 *frame_time*20), max(0, var.run -0.1 *frame_time*20)), 0, if(is_child, 1.5, 1))",
					"var.walk": "clamp(1-var.run, 0, 1)",
					"var.eatA": "clamp(if((head.ty-6)!=0 && (head.rx-torad(head_pitch))!=0, min(20, var.eatA +0.1 *frame_time*20), max(0, var.eatA -0.1 *frame_time*20) ), 0, 1)",
					"var.eat": "(0.5-0.5*cos( var.eatA*pi ))",
					"var.Lear": "clamp( cos(          var.r +age/20 ) *20 -20 +1 , 0 , clamp( sin( var.r +age/(20*12) )*8 -5 , 0 , 1 ) )",
					"var.Rear": "clamp( cos( pi/1.52 +var.r +age/15 ) *15 -15 +1 , 0 , clamp( sin( var.r +age/(15*12) )*8 -5 , 0 , 1 ) )"
				},
				{
					"body.rx": "pi/2",
					"head2.rx": "-if(!is_on_ground&&is_in_water, -sin(var.swim)/10, (-sin(var.ls)/9*limb_speed)*var.run +(sin(var.ls*2)/14*limb_speed)*var.walk ) +torad(-90) +sin(var.b+torad(90))/70 +(torad(-5)*limb_speed) +torad(40+9*sin(age))*var.eat +torad(head_pitch)*(1-var.eat)",
					"head2.ry": "0",
					"head2.rz": "-torad(var.hy)/1.2",
					"head2.tx": " (-sin(var.ls)/2 *limb_speed)*var.walk +clamp(-torad(var.hy)*2, -4, 4)",
					"head2.tz": " if(!is_on_ground&&is_in_water, -4, (0.5 +cos(var.ls)*2*limb_speed)*var.run +(sin(var.ls*2) -1)*limb_speed*var.walk ) -if(is_child, 9, 12.8)*var.eat +if(is_child, 3, 1) +sin(torad(45)+var.b)/6",
					"head2.ty": "-28.5 +if(!is_on_ground&&is_in_water, sin(var.swim)/2 +sin(torad(-45)+var.swim)/2, 0) -if(is_child, 2.5, 0.5)*var.eat",
					"head2.sx": "if(is_child, 2, 1)",
					"head2.sy": "head2.sx",
					"head2.sz": "head2.sx",
					"rotation.rx": "if(!is_on_ground&&is_in_water, torad(-10) +cos(var.swim)/10, (-sin(torad(90)+var.ls)/6*limb_speed)*var.run +(sin(torad(45)+var.ls*2)/14*limb_speed)*var.walk ) +sin(var.b-torad(90))/60 +torad(10)*var.eat",
					"rotation.ry": "(-sin(var.ls)/24*limb_speed)*var.run +(-sin(var.ls)/10*limb_speed)*var.walk",
					"rotation.rz": "-torad(var.hy)/10*clamp(1-limb_speed*2, 0, 1)",
					"rotation.tx": "(-sin(var.ls)/2 *limb_speed)*var.walk",
					"rotation.ty": "if(!is_on_ground&&is_in_water, sin(torad(-45)+var.swim)/2, (sin(torad(-135)+var.ls*2)/4*limb_speed)*var.walk ) -18.5",
					"rotation.tz": "if(!is_on_ground&&is_in_water, -5, (limb_speed/2 +sin(torad(45)+var.ls)*limb_speed)*var.run +((-1*limb_speed) +sin(var.ls*2)*limb_speed)*var.walk ) -4.2 +sin(var.b)/6 -3*var.eat"
				},
				{
					"right_hind_leg.rx": " sin(var.b)/60           +if(!is_on_ground&&is_in_water,  sin(var.swim)/2, (sin(torad( 0 -22.5)+var.ls)/2 +clamp(sin(torad( 90-22.5)+var.ls)/3, torad(-20), 0) +torad(5))*limb_speed*var.run +(asin(sin(torad(-90 +20)+var.ls))/3*clamp(limb_speed*4, 0.4, 1) +clamp(sin(torad(  0 +20)+var.ls)/6, torad(-20), 0)*clamp(limb_speed*4, 0, 1) )*var.walk ) -torad(var.hy)/24*clamp(1-limb_speed*2, 0, 1)",
					"left_hind_leg.rx": " sin(var.b)/60           +if(!is_on_ground&&is_in_water, -sin(var.swim)/2, (sin(torad(-90     )+var.ls)/2 +clamp(sin(torad( 0      )+var.ls)/3, torad(-20), 0) +torad(5))*limb_speed*var.run +(asin(sin(torad( 90 +20)+var.ls))/3*clamp(limb_speed*4, 0.4, 1) +clamp(sin(torad(180 +20)+var.ls)/6, torad(-20), 0)*clamp(limb_speed*4, 0, 1) )*var.walk ) +torad(var.hy)/24*clamp(1-limb_speed*2, 0, 1)",
					"right_front_leg.rx": "-sin(var.b)/60 -torad(2) +if(!is_on_ground&&is_in_water, -cos(var.swim)/2, (sin(torad( 90     )+var.ls)/2 +clamp(sin(torad( 0      )+var.ls)/3, 0, torad( 20)) +torad(5))*limb_speed*var.run +(asin(sin(torad(180    )+var.ls))/3*clamp(limb_speed*4, 0.4, 1) +clamp(sin(torad( 90    )+var.ls)/4, 0, torad( 20))*clamp(limb_speed*4, 0, 1) )*var.walk ) -torad(var.hy)/24*clamp(1-limb_speed*2, 0, 1) +torad(3)*var.eat",
					"left_front_leg.rx": "-sin(var.b)/60 -torad(2) +if(!is_on_ground&&is_in_water,  cos(var.swim)/2, (sin(torad(180-22.5)+var.ls)/2 +clamp(sin(torad( 90-22.5)+var.ls)/3, 0, torad( 20)) +torad(5))*limb_speed*var.run +(asin(sin(torad( 0     )+var.ls))/3*clamp(limb_speed*4, 0.4, 1) +clamp(sin(torad(-90    )+var.ls)/4, 0, torad( 20))*clamp(limb_speed*4, 0, 1) )*var.walk ) +torad(var.hy)/24*clamp(1-limb_speed*2, 0, 1) +torad(3)*var.eat",
					"right_hind_leg.ry": "torad(-5)*clamp(1-limb_speed*8, 0, 1) +torad(var.hy)/10*clamp(1-limb_speed*2, 0, 1)",
					"left_hind_leg.ry": "torad( 5)*clamp(1-limb_speed*8, 0, 1) +torad(var.hy)/10*clamp(1-limb_speed*2, 0, 1)",
					"right_front_leg.ry": "torad( 5)*clamp(1-limb_speed*8, 0, 1) +torad(var.hy)/10*clamp(1-limb_speed*2, 0, 1) -torad(5)*var.eat",
					"left_front_leg.ry": "torad(-5)*clamp(1-limb_speed*8, 0, 1) +torad(var.hy)/10*clamp(1-limb_speed*2, 0, 1) +torad(5)*var.eat",
					"right_hind_leg.rz": "                                               torad(var.hy)/20*clamp(1-limb_speed*2, 0, 1)",
					"left_hind_leg.rz": "                                               torad(var.hy)/20*clamp(1-limb_speed*2, 0, 1)",
					"right_front_leg.rz": "if(!is_on_ground&&is_in_water, torad( 10), 0) -torad(var.hy)/16*clamp(1-limb_speed*2, 0, 1)",
					"left_front_leg.rz": "if(!is_on_ground&&is_in_water, torad(-10), 0) -torad(var.hy)/16*clamp(1-limb_speed*2, 0, 1)",
					"right_hind_leg.tx": "-2.5",
					"left_hind_leg.tx": " 2.5",
					"right_front_leg.tx": "-2.5 +if(!is_on_ground&&is_in_water, -2, 0)",
					"left_front_leg.tx": " 2.5 +if(!is_on_ground&&is_in_water,  2, 0)",
					"right_hind_leg.ty": "24 + if(!is_on_ground&&is_in_water, 4 +cos(var.swim)*1.5, clamp( (-2 +sin(torad( 90-22.5)+var.ls)*2)*limb_speed*var.run +( sin(torad( 0  +20)+var.ls)*2*clamp(limb_speed*4, 0, 1))*var.walk, -4, 0))",
					"left_hind_leg.ty": "24 + if(!is_on_ground&&is_in_water, 4 -cos(var.swim)*1.5, clamp( (-2 +sin(torad( 0      )+var.ls)*2)*limb_speed*var.run +( sin(torad(180 +20)+var.ls)*2*clamp(limb_speed*4, 0, 1))*var.walk, -4, 0))",
					"right_front_leg.ty": "24 + if(!is_on_ground&&is_in_water, 2 +sin(var.swim)*1.5, clamp( (-2 +sin(torad(180     )+var.ls)*2)*limb_speed*var.run +( sin(torad(-90    )+var.ls)*2*clamp(limb_speed*4, 0, 1))*var.walk, -4, 0))",
					"left_front_leg.ty": "24 + if(!is_on_ground&&is_in_water, 2 -sin(var.swim)*1.5, clamp( (-2 +sin(torad(-90-22.5)+var.ls)*2)*limb_speed*var.run +( sin(torad( 90    )+var.ls)*2*clamp(limb_speed*4, 0, 1))*var.walk, -4, 0))",
					"right_hind_leg.tz": " 7 + if(!is_on_ground&&is_in_water,  sin(var.swim)*6, (sin(torad( 0 -22.5)+var.ls)*6 +1)*limb_speed*var.run +( asin(sin(torad(-90 +20)+var.ls))*4*clamp(limb_speed*4, 0.4, 1))*var.walk )",
					"left_hind_leg.tz": " 7 + if(!is_on_ground&&is_in_water, -sin(var.swim)*6, (sin(torad(-90     )+var.ls)*6 +1)*limb_speed*var.run +( asin(sin(torad( 90 +20)+var.ls))*4*clamp(limb_speed*4, 0.4, 1))*var.walk )",
					"right_front_leg.tz": "-5 + if(!is_on_ground&&is_in_water, -cos(var.swim)*6, (sin(torad( 90     )+var.ls)*6 +1)*limb_speed*var.run +( asin(sin(torad(180    )+var.ls))*4*clamp(limb_speed*4, 0.4, 1))*var.walk )",
					"left_front_leg.tz": "-5 + if(!is_on_ground&&is_in_water,  cos(var.swim)*6, (sin(torad(180-22.5)+var.ls)*6 +1)*limb_speed*var.run +( asin(sin(torad( 0     )+var.ls))*4*clamp(limb_speed*4, 0.4, 1))*var.walk )"
				},
				{
					"r_eye_top.ty": "        clamp(head_pitch/120, -0.1, 0.4) +(-1.5 -cos(limb_swing/3)/2)/4*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"l_eye_top.ty": "        clamp(head_pitch/120, -0.1, 0.4) +(-1.5 -cos(limb_swing/3)/2)/4*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"ctrl_r_pupil.ty": "0.5 +clamp(head_pitch/120, -0.1, 0.5) +(-1.5 -cos(limb_swing/3)/2)/8*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0) -clamp(-24 +sin(var.r+age/100)*40, 0, 1)/10",
					"ctrl_l_pupil.ty": "ctrl_r_pupil.ty",
					"ctrl_r_pupil.tx": "-0.5 -var.hy/80 +clamp(sin(var.r+age/27) +sin(var.r+age/16), -0.1, 0.1)*clamp(-20*2 -cos(var.r+age/125)*30*2, 0, 1)*clamp(59*4 -sin(var.r+age/187)*60*4, 0, 1)",
					"ctrl_l_pupil.tx": " 0.5 -var.hy/80 +clamp(sin(var.r+age/27) +sin(var.r+age/16), -0.1, 0.1)*clamp(-20*2 -cos(var.r+age/125)*30*2, 0, 1)*clamp(59*4 -sin(var.r+age/187)*60*4, 0, 1)",
					"right_blink.sy": "clamp((1.5 -abs(sin(var.r+age/9.5)*6))*clamp(-32 +cos((var.r+age/9.5)/1.5)*40 +cos((var.r+age/9.5)/4)*40, 0, 1), 0, 1)",
					"left_blink.sy": " clamp((1.5 -abs(sin(var.r+age/9.5)*6))*clamp(-32 +cos((var.r+age/9.5)/1.5)*40 +cos((var.r+age/9.5)/4)*40, 0, 1), 0, 1)",
					"right_ear.rx": "-torad(head_pitch)/2 -torad(var.hy)/3 +torad( 20 +45*clamp( (  sin(       pi/4 +(var.r+age)/2 ) +sin(       (var.r+age) )  ) *var.Rear -1 , 0 , 1 ) )",
					"left_ear.rx": " -torad(head_pitch)/2 +torad(var.hy)/3 +torad( 20 +45*clamp( (  sin(       pi/4 +(var.r+age)/2 ) +sin(       (var.r+age) )  ) *var.Lear -1 , 0 , 1 ) )",
					"right_ear.ry": "torad(20*limb_speed) -torad(var.hy)/3 +torad(     60*clamp( (  sin(-pi/8 +pi/4 +(var.r+age)/2 ) +sin(-pi/8 +(var.r+age) )  ) *var.Rear -1 , 0 , 1 ) )",
					"left_ear.ry": "-torad(20*limb_speed) -torad(var.hy)/3 +torad(    -60*clamp( (  sin(-pi/8 +pi/4 +(var.r+age)/2 ) +sin(-pi/8 +(var.r+age) )  ) *var.Lear -1 , 0 , 1 ) )",
					"right_ear.rz": "clamp(-torad(head_pitch)/2 +(-cos(pi/4+var.ls +cos(pi/4+var.ls)/3)/2*limb_speed )*var.run +(-cos(var.ls*2 +sin(var.ls*2)/2)/3*limb_speed)*var.walk +torad(var.hy)/2 -torad(10) +sin(torad(-45)+var.b)/20, -pi/2, pi/2 )",
					"left_ear.rz": " clamp( torad(head_pitch)/2 +( cos(pi/4+var.ls +cos(pi/4+var.ls)/3)/2*limb_speed )*var.run +( cos(var.ls*2 +sin(var.ls*2)/2)/3*limb_speed)*var.walk +torad(var.hy)/2 +torad(10) -sin(torad(-45)+var.b)/20, -pi/2, pi/2 )"
				},
				{
					"right_eye.sz": "if(between(player_pos_x-pos_x, -30, 30)&&between(player_pos_y-pos_y, -30, 30)&&between(player_pos_z-pos_z, -30, 30), 1, 2)",
					"left_eye.sz": "right_eye.sz",
					"right_eye_white.sx": "2",
					"right_eye_white.sy": "clamp(1 -(r_eye_top.ty), 0.5, 3)",
					"r_eye_pupil.tx": "clamp(ctrl_r_pupil.tx, -0.5, 0.1)",
					"r_eye_pupil.ty": "clamp(ctrl_r_pupil.ty, r_eye_top.ty, 1)",
					"r_eye_pupil_up.sy": "clamp(1 -(ctrl_r_pupil.ty-0.5)              , 0.5, clamp(1-r_eye_top.ty, 0.5, 1))",
					"r_eye_pupil_do.sy": "clamp(1 +(ctrl_r_pupil.ty-0.5) -r_eye_top.ty, 0.5, 1)",
					"r_eye_pupil_in.sx": "clamp(1 -(ctrl_r_pupil.tx-0.5)              , 1, 1)",
					"r_eye_pupil_ou.sx": "clamp(1 +(ctrl_r_pupil.tx+0.5)              , 0.9, 1)",
					"right_eyelid.sy": "clamp(right_eye_white.sy, 1, 4)",
					"right_eyelid.sz": "if(right_eyelid.sy==0||right_blink.sy==0, 0, 1)",
					"right_eyelid.tz": "0",
					"left_eye_white.sx": "2",
					"left_eye_white.sy": "clamp(1 -(l_eye_top.ty), 0.5, 3)",
					"l_eye_pupil.tx": "clamp(ctrl_l_pupil.tx, -0.1, 0.5)",
					"l_eye_pupil.ty": "clamp(ctrl_l_pupil.ty, l_eye_top.ty, 1)",
					"l_eye_pupil_up.sy": "clamp(1 -(ctrl_l_pupil.ty-0.5)              , 0.5, clamp(1-l_eye_top.ty, 0.5, 1))",
					"l_eye_pupil_do.sy": "clamp(1 +(ctrl_l_pupil.ty-0.5) -l_eye_top.ty, 0.5, 1)",
					"l_eye_pupil_in.sx": "clamp(1 -(ctrl_l_pupil.tx-0.5)              , 0.9, 1)",
					"l_eye_pupil_ou.sx": "clamp(1 +(ctrl_l_pupil.tx+0.5)              , 1, 1)",
					"left_eyelid.sy": "clamp(left_eye_white.sy, 1, 4)",
					"left_eyelid.sz": "if(left_eyelid.sy==0||left_blink.sy==0, 0, 1)",
					"left_eyelid.tz": "0"
				},
				{
					"head_part.rx": "head2.rx",
					"head_part.ry": "head2.ry",
					"head_part.rz": "head2.rz",
					"head_part.tx": "head2.tx",
					"head_part.ty": "head2.ty+19",
					"head_part.tz": "head2.tz-2",
					"head_part.sx": "head2.sx",
					"head_part.sy": "head2.sy",
					"head_part.sz": "head2.sz",
					"body_part.rx": "rotation.rx",
					"body_part.ry": "rotation.ry",
					"body_part.rz": "rotation.rz",
					"body_part.tx": "rotation.tx",
					"body_part.ty": "rotation.ty+19",
					"body_part.tz": "rotation.tz-2"
				}
			]
		},
		{
			"part": "head",
			"id": "head",
			"invertAxis": "xy",
			"translate": [0, 0, 0]
		},
		{
			"part": "right_hind_leg",
			"id": "right_hind_leg",
			"invertAxis": "xy",
			"translate": [-3, 0, -7],
			"boxes": [
				{
					"coordinates": [1, 6, 5, 4, 6, 4],
					"uvNorth": [16, 80, 32, 104],
					"uvEast": [0, 80, 16, 104],
					"uvSouth": [48, 80, 64, 104],
					"uvWest": [32, 80, 48, 104],
					"uvUp": [32, 80, 16, 64],
					"uvDown": [48, 64, 32, 80],
					"sizeAdd": 0.5
				}
			]
		},
		{
			"part": "left_hind_leg",
			"id": "left_hind_leg",
			"invertAxis": "xy",
			"translate": [3, 0, -7],
			"boxes": [
				{
					"coordinates": [-5, 6, 5, 4, 6, 4],
					"uvNorth": [32, 80, 16, 104],
					"uvEast": [48, 80, 32, 104],
					"uvSouth": [64, 80, 48, 104],
					"uvWest": [16, 80, 0, 104],
					"uvUp": [16, 80, 32, 64],
					"uvDown": [32, 64, 48, 80],
					"sizeAdd": 0.5
				}
			]
		},
		{
			"part": "right_front_leg",
			"id": "right_front_leg",
			"invertAxis": "xy",
			"translate": [-3, 0, 5],
			"boxes": [
				{
					"coordinates": [1, 6, -7, 4, 6, 4],
					"uvNorth": [16, 80, 32, 104],
					"uvEast": [0, 80, 16, 104],
					"uvSouth": [48, 80, 64, 104],
					"uvWest": [32, 80, 48, 104],
					"uvUp": [32, 80, 16, 64],
					"uvDown": [48, 64, 32, 80],
					"sizeAdd": 0.5
				}
			]
		},
		{
			"part": "left_front_leg",
			"id": "left_front_leg",
			"invertAxis": "xy",
			"translate": [3, 0, 5],
			"boxes": [
				{
					"coordinates": [-5, 6, -7, 4, 6, 4],
					"uvNorth": [32, 80, 16, 104],
					"uvEast": [48, 80, 32, 104],
					"uvSouth": [64, 80, 48, 104],
					"uvWest": [16, 80, 0, 104],
					"uvUp": [16, 80, 32, 64],
					"uvDown": [32, 64, 48, 80],
					"sizeAdd": 0.5
				}
			]
		},
		{
			"part": "body",
			"id": "body",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "body",
			"id": "body",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "right_hind_leg",
			"id": "right_hind_leg",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "left_hind_leg",
			"id": "left_hind_leg",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "right_front_leg",
			"id": "right_front_leg",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "left_front_leg",
			"id": "left_front_leg",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "right_hind_leg",
			"id": "right_hind_leg",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "left_hind_leg",
			"id": "left_hind_leg",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "right_front_leg",
			"id": "right_front_leg",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "left_front_leg",
			"id": "left_front_leg",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		}
	]
}